<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE task PUBLIC "-//IBM//DTD DITA IBM Task//EN"
 "ibm-task.dtd">
<task id="container_single_pipeline_deploy" xml:lang="ja-jp">
<title><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/deliverypipeline"></keyword> によるコンテナーのデプロイメント・ステージの作成</title>
<titlealts>
<navtitle>デプロイメント・ステージの作成</navtitle>
<searchtitle><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/deliverypipeline"></keyword> および <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/containerlong"></keyword> によるコンテナーのデプロイメント・ステージの作成</searchtitle></titlealts>
<shortdesc><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/deliverypipeline"></keyword> を使用することによって、コンテナーのデプロイメント・ステージを作成できます。</shortdesc>
<prolog>
<metadata>
<keywords><indexterm>単一コンテナー</indexterm><indexterm>デリバリー・パイプライン</indexterm><indexterm>継続的なデリバリー</indexterm><indexterm>IBM Containers</indexterm><indexterm>コンテナー</indexterm></keywords></metadata></prolog>
<taskbody>
<prereq><p>開始前に、以下のことを行います。<ul>
<li><xref href="container_single_pipeline_build.dita" type="task" format="dita" scope="local">ビルド・ステージを作成する</xref>。</li>
<li><xref href="https://github.com/Osthanes/deployscripts/blob/master/deploycontainer.sh" format="html" scope="external">単一コンテナー用のデフォルトのデプロイメント・スクリプトを確認する</xref>。
デフォルト・スクリプトを fork して編集することも、代わりに独自のスクリプトを作成して使用することもできます。</li>
<li><xref href="../services/ContinuousDelivery/pipeline_deploy_var.html" format="html" scope="peer"><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/deliverypipeline"></keyword> サービスに用意されている環境変数のリストを確認する</xref>。</li></ul></p></prereq>
<steps>
<step>
<cmd>ツールチェーンの「概要」ページから、<uicontrol>「<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/deliverypipeline"></keyword>」</uicontrol>をクリックします。</cmd></step>
<step id="deploy_stage">
<cmd>デプロイメント・ステージを作成します。</cmd><substeps>
<substep>
<cmd><uicontrol>「ステージの追加」</uicontrol>をクリックします。</cmd></substep>
<substep>
<cmd>ステージに名前を付けます。</cmd>
<stepxmp>例えば、<codeph><varname>Deploy</varname></codeph> と指定します。</stepxmp></substep>
<substep>
<cmd>入力タイプとして<uicontrol>「ビルド成果物」</uicontrol>を選択します。</cmd></substep></substeps></step>
<step id="deployment_job">
<cmd>ステージでデプロイメント・ジョブを作成します。</cmd><substeps>
<substep>
<cmd><uicontrol>「ジョブ」</uicontrol>タブで、<uicontrol>「ジョブの追加」</uicontrol>をクリックします。</cmd></substep>
<substep>
<cmd>ジョブ・タイプとして<uicontrol>「デプロイ」</uicontrol>を選択します。</cmd></substep>
<substep>
<cmd>デプロイヤー・タイプとして、<uicontrol>「<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> 上の IBM Container サービス (IBM Container service on Bluemix)」</uicontrol>を選択します。</cmd></substep>
<substep>
<cmd>組織およびスペースについて、値を確認して、必要に応じて更新します。</cmd></substep>
<substep>
<cmd><uicontrol>「デプロイメント戦略 (Deployment strategy)」</uicontrol>フィールドで、以下のいずれかの値を入力します。</cmd>
<info>
<ul>
<li><uicontrol>red_black</uicontrol> - アプリの新しいバージョンをデプロイします。デプロイメントが成功した場合、アプリの以前のデプロイメントが削除され、IP アドレスまたは経路が新しいバージョンにマップされます。</li>
<li><uicontrol>clean</uicontrol> - アプリケーションの以前のすべてのデプロイメントが削除されます。</li></ul></info>
<stepxmp>
<note type="tip"><codeph>CONCURRENT_VERSIONS</codeph> 環境プロパティーは、アクティブに保つアプリ・デプロイメントのバージョンの数を設定します。デフォルト値は 1 つのバージョンです。例えば、<codeph>CONCURRENT_VERSIONS</codeph> を 2 に設定して、IP アドレスを 1 つ使用している場合は、最新のデプロイメントが IP アドレスにバインドされますが、前のバージョンはクイック・スタンバイ用にデプロイされたままになります。
<p>アプリのすべてのデプロイメントを常に削除するには、<uicontrol>「環境プロパティー」</uicontrol>タブで、<codeph>CONCURRENT_VERSIONS</codeph> を <codeph>0</codeph> に設定します。</p></note></stepxmp></substep>
<substep>
<cmd><uicontrol>「名前」</uicontrol>フィールドに、デプロイするコンテナーの名前を入力します。</cmd></substep>
<substep>
<cmd>ポートとして、コンテナーの公開ポートを入力します。</cmd>
<info>複数のポートは、コンマ (,) で区切ります。<note type="tip" id="private_container">ポートを指定せずにデフォルトのデプロイメント・スクリプトを使用すると、ポート 80 が自動的に公開されます。
デフォルトのデプロイメント・スクリプトを使用する場合にコンテナーをプライベートにするには、以下の手順を実行します。<ol>
<li>デプロイメント戦略として <userinput>simple</userinput> と入力します。</li>
<li> <uicontrol>「ポート」</uicontrol>フィールドをブランクのままにします。</li>
<li importance="optional">simple デプロイメントでは、前のデプロイメントがクリーンアップされないため、別のデプロイメント・ステージを作成してそれらをクリーンアップすることができます。
2 番目のデプロイメント・ステージの<uicontrol>「デプロイメント戦略 (Deployment strategy)」</uicontrol>を <userinput>clean</userinput> に設定します。</li></ol></note></info></substep>
<substep>
<cmd>オプションのデプロイメント引数がある場合は入力します。</cmd>
<stepxmp>例えば、バックエンド・データベースの場所の環境変数がアプリに必要な場合には、以下の行を含めることができます。
<codeblock>--env MY_DB_HOSTNAME_PROPERTY=<varname>mydbhostname</varname></codeblock></stepxmp></substep></substeps></step>
<step>
<cmd>独自のデプロイメント・スクリプトを作成した場合は、<uicontrol>「デプロイヤー・スクリプト (Deployer script)」</uicontrol>セクションを編集してそのスクリプトを使用します。</cmd><substeps>
<substep>
<cmd>次の行をコピーし、自分のリポジトリーを使用するように更新します。</cmd>
<info>
<screen>git_retry clone https://github.com/Osthanes/deployscripts.git deployscripts</screen></info></substep>
<substep>
<cmd>次の行を編集して、自分のスクリプトを使用するようにします。</cmd>
<info>
<screen>/bin/bash deployscripts/deploycontainer.sh</screen></info></substep></substeps></step>
<step>
<cmd><uicontrol>「保存」</uicontrol>をクリックします。</cmd></step>
<step importance="optional" audience="blue">
<cmd><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword>
ステージングにコンテナーをデプロイするには、<codeph>BLUEMIX_TARGET</codeph> 環境プロパティーを含めて、値を
<userinput>staging</userinput> に設定します。</cmd></step></steps></taskbody><?tm 1435623328 0?></task>
