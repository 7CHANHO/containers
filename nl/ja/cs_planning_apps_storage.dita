<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//IBM//DTD DITA IBM Concept//EN" "ibm-concept.dtd">
<concept id="cs_planning_apps_storage" xml:lang="ja-jp">
<title><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/containerlong"> </keyword>
<ph conref="cs_conref.dita#links/release"></ph> の永続データ・ストレージ</title>
<titlealts>
<navtitle>永続データ・ストレージ</navtitle></titlealts>
<shortdesc>コンテナーは、設計上、存続時間が短期です。しかし、コンテナーにフェイルオーバーが発生した場合でもデータが永続するように、そしてコンテナー間でデータを共有するために、複数のオプションから選択することができます。
</shortdesc>
<conbody>
<p><xref href="../api/content/containers/images/cs_planning_apps_storage.png" format="png" scope="external"><image href="images/cs_planning_apps_storage.png" alt="Kubernetes クラスターでのデプロイメントのための永続ストレージのオプション"></image></xref></p>
<p><table frame="all" colsep="1" rowsep="1" id="table_szy_kkw_1z">
<title>Kubernetes クラスターでのデプロイメントのための永続データ・ストレージのオプション</title>
<tgroup cols="2"><colspec colnum="1" colname="c1" colwidth="1.0*"></colspec><colspec colnum="2" colname="c2" colwidth="1.0*"></colspec>
<thead>
<row>
<entry>オプション</entry>
<entry>説明</entry></row></thead>
<tbody>
<row>
<entry>オプション 1: <filepath>/emptyDir</filepath> を使用して、ワーカー・ノード上の使用可能なディスク・スペースを使用してデータを永続させる</entry>
<entry>このオプションでは、ポッドに割り当てられたワーカー・ノードのディスク・スペースに空のボリュームを作成できます。
そのポッド内のコンテナーは、そのボリュームに対する読み取りと書き込みを行うことができます。
ボリュームが特定の 1 つのポッドに割り当てられているので、レプリカ・セット内の他のポッドとデータを共有することはできません。
<p><filepath>/emptyDir</filepath> ボリュームとそのデータは、割り当てられたポッドがワーカー・ノードから永久に削除されるときに削除されます。
<note>ポッド内のコンテナーがクラッシュした場合でも、ボリューム内のデータはワーカー・ノードで引き続き使用できます。
</note>詳しくは、<xref href="https://kubernetes.io/docs/concepts/storage/volumes/" format="html" scope="external">Kubernetes volumes</xref> を参照してください。
</p></entry></row>
<row>
<entry>オプション 2: 使用するデプロイメント用に NFS ベースの永続ストレージをプロビジョンするための永続ボリューム請求を行う
</entry>
<entry>このオプションでは、<xref href="cs_apps_volume_claim.dita" format="dita" scope="local">永続ボリューム請求</xref>を行って、NFS ベースのファイル・ストレージの要求を開始できます。
<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/containerlong"></keyword> には、ストレージのサイズ、IOPS、ボリュームに対する読み取りと書き込みの許可を定義する、事前定義されたストレージ・クラスが用意されています。
永続ボリューム請求を行う際に、これらのストレージ・クラスの中から選択できます。
永続ボリューム請求をサブミットすると、<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/containerlong"></keyword> が NFS ベースのファイル・ストレージでホストされる永続ボリュームを動的にプロビジョニングします。<xref href="cs_apps_volume_claim.dita#cs_apps_volume_claim/mount" format="dita" scope="local"> 永続ボリューム請求をボリュームとしてポッドにマウントし</xref>、ポッド内のコンテナーがボリュームに対する読み取りと書き込みを行えるようにすることができます。
永続ボリュームは、同じレプリカ・セット内のポッドの間で、または同じクラスター内の他のポッドと共有することができます。
<p>コンテナーがクラッシュしたとき、またはポッドがワーカー・ノードから削除されたときでも、データは削除されないので、ボリュームをマウントした他のポッドから引き続きアクセスできます。
</p>
<ph conref="cs_conref.dita#links/paidonly"></ph></entry></row>
<row>
<entry>オプション 3: <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> データベース・サービスをポッドにバインドする</entry>
<entry>このオプションの場合、<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> データベース・クラウド・サービスを使用して、データを永続させ、アクセスすることができます。
<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> サービスをクラスター内の名前空間にバインドすると、Kubernetes シークレットが作成されます。
Kubernetes シークレットは、サービスへの URL、ユーザー名、パスワードなど、サービスに関する機密情報を保持します。
シークレットをシークレット・ボリュームとしてポッドにマウントして、シークレット内の資格情報を使用することによりサービスにアクセスできます。
シークレット・ボリュームを他のポッドにマウントすることにより、ポッド間でデータを共有することもできます。
<p>コンテナーがクラッシュしたとき、またはポッドがワーカー・ノードから削除されたときでも、データは削除されないので、シークレット・ボリュームをマウントした他のポッドから引き続きアクセスできます。
</p> <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> のデータベース・サービスのほとんどは、少量のデータ用のディスク・スペースを無料で提供しているため、機能をテストすることができます。
<p><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> サービスをポッドにバインドする方法について詳しくは、<xref href="cs_apps_service.dita" format="dita"></xref>を参照してください。
</p></entry></row></tbody></tgroup></table></p></conbody></concept>
