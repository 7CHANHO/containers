<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//IBM//DTD DITA IBM Task//EN" "ibm-task.dtd">
<task id="cs_apps_images" xml:lang="ja-jp">
<title><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/containerlong"></keyword> <ph conref="cs_conref.dita#links/release"></ph> でのプライベートとパブリックのイメージ・レジストリーの使用</title>
<titlealts>
<navtitle> プライベートとパブリックのイメージ・レジストリーの使用</navtitle></titlealts>
<shortdesc>Docker イメージは、作成するすべてのコンテナーの基礎となるものです。イメージは、Dockerfile (イメージをビルドするための指示が入ったファイル) から作成されます。Dockerfile の別個に保管されている指示の中で、ビルド成果物 (アプリ、アプリの構成、その従属関係) が参照されることもあります。イメージは通常、レジストリーに保管されます。だれでもアクセスできるレジストリー (パブリック・レジストリー) を使用することも、小さなグループのユーザーだけにアクセスを限定したレジストリー (プライベート・レジストリー) をセットアップすることもできます。
</shortdesc>
<taskbody>
<context><p>イメージ・レジストリーのセットアップ方法やレジストリー内のイメージの使用方法については、以下のオプションがあります。<ul id="ul_fww_r5t_xz">
<li><xref href="#bx_registry_default"></xref>.</li>
<li><xref href="#dockerhub"></xref>.</li>
<li><xref href="#private_registry">他のプライベート・レジストリー内に保管されているプライベート・イメージへのアクセス</xref></li></ul></p></context></taskbody>
<task id="bx_registry_default">
<title>IBM 提供のイメージや独自のプライベート Docker イメージを処理するために <ph conref="cs_conref.dita#links/registry_name"></ph> の名前空間にアクセスする</title>
<shortdesc><ph conref="cs_conref.dita#links/registry_name"></ph> 内の名前空間に保管されている IBM 提供のパブリック・イメージやプライベート・イメージからクラスターにコンテナーをデプロイできます。</shortdesc>
<taskbody>
<prereq id="prereq_jbv_pj4_xz">開始前に、以下のことを行います。<ul id="ul_uqg_qj4_xz">
<li><ph conref="cs_conref.dita#links/registry_namespace_link"></ph></li>
<li><xref href="cs_cluster_cli.dita" scope="local">クラスターを作成します</xref>。</li>
<li><xref href="cs_cli_configure.dita">CLI のターゲットを自分のクラスターに設定します</xref>。</li></ul></prereq>
<context><p>クラスターを作成すると、有効期限のないレジストリー・トークンがそのクラスターに対して自動的に作成されます。このトークンは、<ph conref="cs_conref.dita#links/registry_name"></ph> 内にセットアップした名前空間への読み取り専用アクセスを許可するために使用されるもので、これにより、IBM 提供のパブリック・イメージや独自のプライベート Docker イメージの処理が可能になります。コンテナー化アプリのデプロイ時に Kubernetes クラスターにアクセスできるようにするには、トークンを Kubernetes <codeph>imagePullSecret</codeph> 内に保管しなければなりません。クラスターが作成されると、<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/containerlong"></keyword> によりこのトークンが Kubernetes <codeph>imagePullSecret</codeph> 内に自動的に保管されます。 <codeph>imagePullSecret</codeph> は、デフォルトの Kubernetes 名前空間、その名前空間の ServiceAccount 内のシークレットのデフォルト・リスト、kube-system 名前空間に追加されます。</p>
<note>この初期セットアップにより、<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> アカウント内の名前空間内の使用可能な任意のイメージから、クラスターの <uicontrol>default</uicontrol> 名前空間内にコンテナーをデプロイできます。クラスター内のその他の名前空間内にコンテナーをデプロイする場合や、別の <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> 地域か別の <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> アカウントに保管されているイメージを使用する場合は、その<xref href="#bx_registry_other">クラスター用に独自の imagePullSecret を作成</xref>しなければなりません。</note></context>
<steps id="steps_vxq_th4_xz">
<stepsection>コンテナーをクラスターの <uicontrol>default</uicontrol> 名前空間内にデプロイするには、以下のステップを実行します。</stepsection>
<step>
<cmd>デプロイメント構成スクリプトを作成します。</cmd><substeps id="substeps_v31_zh4_xz">
<substep>
<cmd>任意のエディターを開き、<filepath>mydeployment.yaml</filepath> という名前のデプロイメント構成スクリプトを作成します。</cmd></substep>
<substep>
<cmd>デプロイメントと、<ph conref="cs_conref.dita#links/registry_name"></ph>内の名前空間にある、使用するイメージを定義します。</cmd>
<info>
<p>IBM 提供のパブリック・イメージを使用するには、以下のようにします。</p>
<codeblock>apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ibmliberty-deployment
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: ibmliberty
    spec:
      containers:
      - name: ibmliberty
        image: registry.<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/domainname"></keyword>/ibmliberty</codeblock><ph conref="cs_conref.dita#links/registry_name"></ph>内の名前空間にあるプライベート・イメージを使用するには、次のようにします。
<codeblock>apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ibmliberty-deployment
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: ibmliberty
    spec:
      containers:
      - name: ibmliberty
        image: registry.<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/domainname"></keyword>/<varname>&lt;namespace&gt;</varname>/<varname>&lt;my_image&gt;</varname>:<varname>&lt;tag&gt;</varname></codeblock>
<note type="tip">名前空間の情報を取得するには、<codeph>bx cr namespace-list</codeph> を実行します。</note></info></substep>
<substep>
<cmd>変更を保存します。</cmd></substep>
<substep>
<cmd>クラスター内にデプロイメントを作成します。</cmd>
<info>
<codeblock>kubectl apply -f mydeployment.yaml</codeblock></info></substep></substeps></step></steps></taskbody>
<task id="bx_registry_other">
<title>他の Kubernetes 名前空間へのイメージのデプロイまたは他の <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> 地域やアカウント内のイメージへのアクセス</title>
<shortdesc><ph audience="yellow">独自の imagePullSecret を作成すれば、他の Kubernetes 名前空間にコンテナーをデプロイしたり、他の <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> 地域やアカウント内に保管されているイメージを使用したりできます。</ph><ph audience="blue">独自の imagePullSecret を作成すれば、他の Kubernetes 名前空間にコンテナーをデプロイしたり、他の <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> 地域やアカウント内に保管されているイメージを使用したり、<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> Dedicated 内に保管されているイメージを使用したりできます。</ph></shortdesc>
<taskbody>
<prereq id="prereq_z1g_xrt_xz">開始前に、以下のことを行います。<ol id="ol_zpb_1st_xz">
<li><ph conref="cs_conref.dita#links/registry_namespace_link"></ph>. </li>
<li><xref href="cs_cluster_cli.dita" scope="local">クラスターを作成します</xref>。</li>
<li><xref href="cs_cli_configure.dita">CLI のターゲットを自分のクラスターに設定します</xref>。</li></ol></prereq>
<context id="context_axz_1st_xz">独自の imagePullSecret を作成するには、以下のステップを実行します。
<note>ImagePullSecrets は、それらが作成された対象の Kubernetes 名前空間に対して有効となります。プライベート・イメージからコンテナーをデプロイする名前空間ごとに、以下の手順を繰り返してください。</note></context>
<steps>
<step>
<cmd>まだ用意されていなければ、<ph conref="cs_conref.dita#links/registry_token_link"></ph></cmd></step>
<step>
<cmd><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> アカウント内の使用可能なトークンのリストを表示します。</cmd>
<info>
<codeblock>bx cr token-list</codeblock></info></step>
<step>
<cmd>使用するトークン ID をメモします。</cmd></step>
<step>
<cmd>トークンの値を取得します。</cmd>
<info><varname>&lt;token_id&gt;</varname> を、前のステップで取得したトークンの ID に置き換えます。
<codeblock>bx cr token-get <varname>&lt;token_id&gt;</varname></codeblock>CLI 出力の <uicontrol>Token</uicontrol> フィールドに、トークン値が表示されます。</info></step>
<step>
<cmd>トークン情報を保管する Kubernetes シークレットを作成します。</cmd>
<info>
<codeblock>kubectl --namespace <varname>&lt;kubernetes_namespace&gt;</varname> create secret docker-registry <varname>&lt;secret_name&gt;</varname>  --docker-server=<varname>&lt;registry_url&gt;</varname> --docker-username=token --docker-password=<varname>&lt;token_value&gt;</varname> --docker-email=<varname>&lt;docker_email&gt;</varname></codeblock>

<table frame="all" colsep="1" rowsep="1" id="table_sdf_nkm_2v">
<desc>
<p outputclass="summary">このコマンドの構成要素について</p></desc>
<tgroup cols="2"><colspec colnum="1" colname="c1" colwidth="100pt"></colspec><colspec colnum="2" colname="c2"></colspec>
<thead>
<row>
<entry namest="c1" nameend="c2"><ph conref="container_conref.dita#images/more_info"></ph> このコマンドの構成要素について</entry></row></thead>
<tbody>
<row>
<entry><codeph>--namespace <varname>&lt;kubernetes_namespace&gt;</varname></codeph></entry>
<entry>必須。シークレットを使用してコンテナーをデプロイする、クラスターの Kubernetes 名前空間。クラスター内の名前空間をすべてリストするには、<codeph>kubectl get namespaces</codeph> を実行します。</entry></row>
<row>
<entry><codeph><varname>&lt;secret_name&gt;</varname></codeph></entry>
<entry>必須。<term>imagePullSecret</term> に使用する名前。</entry></row>
<row>
<entry><codeph>--docker-server <varname>&lt;registry_url&gt;</varname></codeph></entry>
<entry>必須。名前空間をセットアップするイメージ・レジストリーの URL。<ul id="ul_vs2_pq4_xz">
<li>米国南部でセットアップする名前空間の場合: registry.ng bluemix.net</li>
<li audience="blue">英国南部でセットアップする名前空間の場合: registry.eu-gb.bluemix.net</li>
<li>中欧 (フランクフルト) でセットアップする名前空間の場合: registry.eu-de.bluemix.net</li>
<li>オーストラリア (シドニー) でセットアップされた名前空間の場合: registry.au-syd.bluemix.net</li>
<li audience="blue"><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> Dedicated でセットアップされた名前空間の場合: registry.<varname>&lt;dedicated_domain&gt;</varname></li></ul></entry></row>
<row>
<entry><codeph>--docker-password <varname>&lt;token_value&gt;</varname></codeph></entry>
<entry>必須。以前に取得したレジストリー・トークンの値。</entry></row>
<row>
<entry><codeph>--docker-email <varname>&lt;docker-email&gt;</varname></codeph></entry>
<entry>必須。Docker E メール・アドレスがある場合は、その値を入力します。ない場合は、例えば a@b.c のような架空の E メール・アドレスを入力します。この E メールは、Kubernetes シークレットを作成する際には必須ですが、作成後は使用されません。</entry></row></tbody></tgroup></table></info></step>
<step>
<cmd>シークレットが正常に作成されたことを確認します。</cmd>
<info><varname>&lt;kubernetes_namespace&gt;</varname> を、imagePullSecret を作成した名前空間の名前に置き換えます。
<codeblock>kubectl get secrets --namespace <varname>&lt;kubernetes_namespace&gt;</varname></codeblock></info></step>
<step>
<cmd>imagePullSecret を参照するポッドを作成します。</cmd><substeps id="substeps_wbd_3qt_xz">
<substep>
<cmd>任意のエディターを開き、<filepath>mypod.yaml</filepath> という名前のポッド構成スクリプトを作成します。</cmd></substep>
<substep>
<cmd>ポッドと、プライベート
<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> レジストリーへのアクセスに使用する imagePullSecret を定義します。</cmd>
<info>名前空間からプライベート・イメージを使用するには、次のようにします。
<codeblock>apiVersion: v1
kind: Pod
metadata:
  name: <varname>&lt;pod_name&gt;</varname>
spec:
  containers:
    - name: <varname>&lt;container_name&gt;</varname>
      image: registry.<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/domainname"></keyword>/<varname>&lt;my_namespace&gt;</varname>/<varname>&lt;my_image&gt;</varname>:<varname>&lt;tag&gt;</varname>  
  imagePullSecrets:
    - name: <varname>&lt;secret_name&gt;</varname></codeblock>
<table frame="all" colsep="1" rowsep="1" id="table_xlz_rqt_xz">
<tgroup cols="2"><colspec colnum="1" colname="c1" colwidth="100pt"></colspec><colspec colnum="2" colname="c2"></colspec>
<thead>
<row>
<entry namest="c1" nameend="c2"><ph conref="container_conref.dita#images/more_info"></ph> この YAML の構成要素について</entry></row></thead>
<tbody>
<row>
<entry><codeph><varname>&lt;pod_name&gt;</varname></codeph></entry>
<entry>作成するポッドの名前。</entry></row>
<row>
<entry><codeph><varname>&lt;container_name&gt;</varname></codeph></entry>
<entry>クラスターにデプロイするコンテナーの名前。</entry></row>
<row>
<entry><codeph><varname>&lt;my_namespace&gt;</varname></codeph></entry>
<entry>イメージが保管されている名前空間。使用可能な名前空間をリストするには、<codeph>bx cr namespace-list</codeph> を実行します。</entry></row>
<row>
<entry><codeph><varname>&lt;my_image&gt;</varname></codeph></entry>
<entry>使用するイメージの名前。<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> アカウント内の使用可能なイメージをリストするには、<codeph>bx cr image-list</codeph> を実行します。</entry></row>
<row>
<entry><codeph><varname>&lt;tag&gt;</varname></codeph></entry>
<entry>使用するイメージのバージョン。タグを指定しないと、デフォルトでは <uicontrol>latest</uicontrol> のタグが付いたイメージが使用されます。</entry></row>
<row>
<entry><codeph><varname>&lt;secret_name&gt;</varname></codeph></entry>
<entry>以前に作成した imagePullSecret の名前。</entry></row></tbody></tgroup></table></info></substep>
<substep>
<cmd>変更を保存します。</cmd></substep>
<substep>
<cmd>クラスター内にデプロイメントを作成します。</cmd>
<info>
<codeblock>kubectl apply -f mypod.yaml</codeblock></info></substep></substeps></step></steps></taskbody></task></task>
<task id="dockerhub">
<title>Docker Hub 内のパブリック・イメージへのアクセス</title>
<shortdesc>Docker Hub 内に保管されているパブリック・イメージを使用すれば、追加の構成を行わずにコンテナーをクラスターにデプロイできます。</shortdesc>
<taskbody>
<prereq id="prereq_h23_ktt_xz">開始前に、以下のことを行います。<ol id="ol_i23_ktt_xz">
<li><xref href="cs_cluster_cli.dita">クラスターを作成します</xref>。</li>
<li><xref href="cs_cli_configure.dita">CLI のターゲットを自分のクラスターに設定します</xref>。</li></ol></prereq>
<steps>
<step>
<cmd>デプロイメント構成スクリプトを作成します。</cmd><substeps id="substeps_lcj_lst_xz">
<substep>
<cmd>任意のエディターを開き、<filepath>mydeployment.yaml</filepath> という名前のデプロイメント構成スクリプトを作成します。</cmd></substep>
<substep>
<cmd>デプロイメントと、Docker Hub 内の使用するパブリック・イメージを定義します。</cmd>
<info>以下の構成スクリプトでは、Docker Hub にある使用可能パブリック・イメージ nginx が使用されています。
<codeblock>apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx</codeblock></info></substep>
<substep>
<cmd>変更を保存します。</cmd></substep>
<substep>
<cmd>クラスター内にデプロイメントを作成します。</cmd>
<info>
<codeblock>kubectl apply -f mydeployment.yaml</codeblock></info></substep></substeps></step></steps></taskbody></task>
<task id="private_registry">
<title>他のプライベート・レジストリー内に保管されているプライベート・イメージへのアクセス</title>
<shortdesc>既存のプライベート・レジストリーを使用する場合は、そのレジストリーの資格情報を Kubernetes imagePullSecret に保管し、構成スクリプト内でこのシークレットを参照する必要があります。</shortdesc>
<taskbody>
<prereq id="prereq_cll_ltt_xz">開始前に、以下のことを行います。<ol id="ol_dll_ltt_xz">
<li><xref href="cs_cluster_cli.dita">クラスターを作成します</xref>。</li>
<li><xref href="cs_cli_configure.dita">CLI のターゲットを自分のクラスターに設定します</xref>。</li></ol></prereq>
<context id="context_rtz_qtt_xz">imagePullSecret を作成するには、以下のステップを実行します。<note>ImagePullSecrets は、それらが作成された対象の Kubernetes 名前空間に対して有効となります。プライベート <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> レジストリー内のイメージからコンテナーをデプロイする名前空間ごとに、以下の手順を繰り返してください。</note></context>
<steps id="steps_mr4_vtt_xz">
<step>
<cmd>プライベート・レジストリーの資格情報を保管する Kubernetes シークレットを作成します。</cmd>
<info>
<codeblock>kubectl --namespace <varname>&lt;kubernetes_namespace&gt;</varname> create secret docker-registry <varname>&lt;secret_name&gt;</varname>  --docker-server=<varname>&lt;registry_url&gt;</varname> --docker-username=<varname>&lt;docker_username&gt;</varname> --docker-password=<varname>&lt;docker_password&gt;</varname> --docker-email=<varname>&lt;docker_email&gt;</varname></codeblock>

<table frame="all" colsep="1" rowsep="1" id="table_nr4_vtt_xz">
<tgroup cols="2"><colspec colnum="1" colname="c1" colwidth="100pt"></colspec><colspec colnum="2" colname="c2"></colspec>
<thead>
<row>
<entry namest="c1" nameend="c2"><ph conref="container_conref.dita#images/more_info"></ph> このコマンドの構成要素について</entry></row></thead>
<tbody>
<row>
<entry><codeph>--namespace <varname>&lt;kubernetes_namespace&gt;</varname></codeph></entry>
<entry>必須。シークレットを使用してコンテナーをデプロイする、クラスターの Kubernetes 名前空間。クラスター内の名前空間をすべてリストするには、<codeph>kubectl get namespaces</codeph> を実行します。</entry></row>
<row>
<entry><codeph><varname>&lt;secret_name&gt;</varname></codeph></entry>
<entry>必須。<term>imagePullSecret</term> に使用する名前。</entry></row>
<row>
<entry><codeph>--docker-server <varname>&lt;registry_url&gt;</varname></codeph></entry>
<entry>必須。プライベート・イメージが保管されているレジストリーの URL。</entry></row>
<row>
<entry><codeph>--docker-username <varname>&lt;docker_username&gt;</varname></codeph></entry>
<entry>必須。プライベート・レジストリーにログインするためのユーザー名。</entry></row>
<row>
<entry><codeph>--docker-password <varname>&lt;docker_password&gt;</varname></codeph></entry>
<entry>必須。プライベート・レジストリーにログインするためのパスワード。</entry></row>
<row>
<entry><codeph>--docker-email <varname>&lt;docker-email&gt;</varname></codeph></entry>
<entry>必須。Docker E メール・アドレスがある場合は、その値を入力します。ない場合は、例えば a@b.c のような架空の E メール・アドレスを入力します。この E メールは、Kubernetes シークレットを作成する際には必須ですが、作成後は使用されません。</entry></row></tbody></tgroup></table></info></step>
<step>
<cmd>シークレットが正常に作成されたことを確認します。</cmd>
<info><varname>&lt;kubernetes_namespace&gt;</varname> を、imagePullSecret を作成した名前空間の名前に置き換えます。
<codeblock>kubectl get secrets --namespace <varname>&lt;kubernetes_namespace&gt;</varname></codeblock></info></step>
<step>
<cmd>imagePullSecret を参照するポッドを作成します。</cmd><substeps id="substeps_pr4_vtt_xz">
<substep>
<cmd>任意のエディターを開き、<filepath>mypod.yaml</filepath> という名前のポッド構成スクリプトを作成します。</cmd></substep>
<substep>
<cmd>ポッドと、プライベート
<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> レジストリーへのアクセスに使用する imagePullSecret を定義します。</cmd>
<info>プライベート・レジストリー内のプライベート・イメージを使用するには、次のようにします。
<codeblock>apiVersion: v1
kind: Pod
metadata:
  name: <varname>&lt;pod_name&gt;</varname>
spec:
  containers:
    - name: <varname>&lt;container_name&gt;</varname>
      image: <varname>&lt;my_image&gt;</varname>:<varname>&lt;tag&gt;</varname>  
  imagePullSecrets:
    - name: <varname>&lt;secret_name&gt;</varname></codeblock>
<table frame="all" colsep="1" rowsep="1" id="table_qr4_vtt_xz">
<tgroup cols="2"><colspec colnum="1" colname="c1" colwidth="100pt"></colspec><colspec colnum="2" colname="c2"></colspec>
<thead>
<row>
<entry namest="c1" nameend="c2"><ph conref="container_conref.dita#images/more_info"></ph> この YAML の構成要素について</entry></row></thead>
<tbody>
<row>
<entry><codeph><varname>&lt;pod_name&gt;</varname></codeph></entry>
<entry>作成するポッドの名前。</entry></row>
<row>
<entry><codeph><varname>&lt;container_name&gt;</varname></codeph></entry>
<entry>クラスターにデプロイするコンテナーの名前。</entry></row>
<row>
<entry><codeph><varname>&lt;my_image&gt;</varname></codeph></entry>
<entry>プライベート・レジストリー内の使用するイメージへのフルパス。</entry></row>
<row>
<entry><codeph><varname>&lt;tag&gt;</varname></codeph></entry>
<entry>使用するイメージのバージョン。タグを指定しないと、デフォルトでは <uicontrol>latest</uicontrol> のタグが付いたイメージが使用されます。</entry></row>
<row>
<entry><codeph><varname>&lt;secret_name&gt;</varname></codeph></entry>
<entry>以前に作成した imagePullSecret の名前。</entry></row></tbody></tgroup></table></info></substep>
<substep>
<cmd>変更を保存します。</cmd></substep>
<substep>
<cmd>クラスター内にデプロイメントを作成します。</cmd>
<info>
<codeblock>kubectl apply -f mypod.yaml</codeblock></info></substep></substeps></step></steps></taskbody></task></task>
