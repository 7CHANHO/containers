<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE tutorialLesson PUBLIC "-//IBM//DTD DITA Tutorial Lesson//EN"
 "tutorialLesson.dtd">
<tutorialLesson id="container_cfapp_tutorial_lesson2" xml:lang="ja-jp" class="- topic/topic task/task tutorialLesson/tutorialLesson ">
<title>レッスン 2: CF アプリのコードを使用して Docker イメージを作成する</title>
<titlealts>
<navtitle>レッスン 2: イメージの作成</navtitle>
<searchtitle>レッスン 2: <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/containerlong"></keyword> で使用する Docker イメージを作成する</searchtitle></titlealts>
<shortdesc>Node.js アプリのコードとコンテナーに必要な構成を含む Dockerfile を作成します。その後、その Dockerfile から Docker イメージをビルドし、それを専用 <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> レジストリーにプッシュします。</shortdesc>
<taskbody>
<steps>
<stepsection>アプリのコードから Docker イメージを作成するには、次の手順を実行します。</stepsection>
<step>
<cmd><filepath>Dockerfile</filepath> を作成し、これを基礎にしてコンテナーを作成します。</cmd>
<info>コンピューター上の任意の CLI エディターまたはテキスト・エディターを使用して、Dockerfile を作成できます。次の例は、<xref href="https://www.nano-editor.org/dist/v2.2/nano.html" format="html" scope="external">nano editor</xref> を使用して Dockerfile ファイルを作成する方法を示しています。<codeblock>nano Dockerfile</codeblock></info></step>
<step>
<cmd>次のスクリプトを Dockerfile にコピーします。</cmd>
<info>
<codeblock>#Use the IBM Node image as a base image
FROM registry.<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/domainname"></keyword>/ibmnode:latest

#Expose the port for your Personal Insights app, and set 
#it as an environment variable as expected by cf apps
ENV PORT=3000
EXPOSE 3000
ENV NODE_ENV production

#Copy all app files from the current directory into the app 
#directory in your container. Set the app directory
#as the working directory
ADD . /app
WORKDIR /app

#Install any necessary requirements from package.json
RUN npm install

#Sleep before the app starts. This command ensures that the
#IBM Containers networking is finished before the app starts. 
CMD (sleep 60; npm start)

#Start the Personal Insight app. 
CMD ["node", "/app/app.js"]</codeblock></info></step>
<step>
<cmd><uicontrol>Ctrl + o</uicontrol> を押して、変更を保存します。<uicontrol>ENTER</uicontrol> を押して、変更を確認します。<uicontrol>ctrl + x</uicontrol> を押して、nano エディターを終了します。
</cmd></step>
<step>
<cmd>アプリ・コードからイメージを作成し、それを専用 <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> レジストリーにプッシュします。</cmd>
<info>
<codeblock><ph conref="container_conref.dita#links/command_prefix"></ph> build -t registry.<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/domainname"></keyword>/<varname>namespace</varname>/<varname>cf-pi-myinitials</varname> .</codeblock>

<table frame="all" colsep="1" rowsep="1" id="table_build">
<tgroup cols="2"><colspec colnum="1" colname="c1" colwidth="1.0*"></colspec><colspec colnum="2" colname="c2" colwidth="1.0*"></colspec>
<thead>
<row>
<entry namest="c1" nameend="c2"><ph conref="container_conref.dita#images/more_info"></ph> このコマンドの構成要素について</entry></row></thead>
<tbody>
<row>
<entry><codeph>build</codeph></entry>
<entry><codeph>build</codeph> コマンド。</entry></row>
<row>
<entry><codeph>registry.<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/domainname"></keyword>/<varname>namespace</varname>/<varname>cf-pi-myinitials</varname></codeph></entry>
<entry>専用 <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> レジストリーのパス。これには、固有の名前空間とイメージの名前が含まれます。この例では、イメージの名前に CF ノード・アプリと同じ名前 (<varname>cf-pi-myinitials</varname>) を使用していますが、専用レジストリーにあるイメージの任意の名前を選択できます。名前空間がわからない場合は、次のコマンドを実行して調べることができます。
<codeblock><ph conref="container_conref.dita#links/command_prefix"></ph> namespace-get</codeblock></entry></row>
<row>
<entry><codeph>.</codeph></entry>
<entry>Dockerfile の場所。Dockerfile の入ったディレクトリーからビルド・コマンドを実行している場合は、ピリオド (.) を入力します。その他の場合は、Dockerfile への相対パスを使用します。</entry></row></tbody></tgroup></table></info></step></steps>
<result>指定したレジストリー内にイメージが作成されます。<codeph><ph conref="container_conref.dita#links/command_prefix"></ph> images</codeph> コマンドを実行すると、イメージが作成されたことを確認できます。<screen>$ <ph conref="container_conref.dita#links/command_prefix"></ph> images
REPOSITORY                                   TAG     IMAGE ID      CREATED         SIZE
registry.<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/domainname"></keyword>/<varname>namespace</varname>/<varname>cf-pi-myinitials</varname>  latest  b02b7a24c35f  48 seconds ago  251.3 MB</screen></result></taskbody></tutorialLesson>
