<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//IBM//DTD DITA IBM Task//EN" "ibm-task.dtd">
<task id="container_ml_logs_cli" xml:lang="ja-jp">
<title><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> CLI からのログの表示</title>
<titlealts>
<navtitle><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> CLI からのログの表示</navtitle>
<searchtitle><keyword conref="cloudoeconrefs.dita#cloudoeconrefs/containerlong"></keyword> の <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> CLI からのログの表示</searchtitle></titlealts>
<shortdesc>CLI を使用して <keyword conref="cloudoeconrefs.dita#cloudoeconrefs/bluemix_short"></keyword> で実行中のコンテナーのログを確認できます。
</shortdesc>
<taskbody>
<context><p>コンテナー・ログを確認すると、コンテナーが停止した理由を分析したりコンテナー出力を検討したりするときに役立ちます。
ただし、<codeph><ph conref="container_conref.dita#links/command_prefix_nocodeph"></ph> logs</codeph> は、アプリが STDOUT と STDERR の出力ストリームにログを書き込む場合にのみ使用できます。
CLI ではロギング・サービスを使用しないため、環境変数を使用して指定したログは表示できません。
これらの標準出力ストリームに書き込むようにアプリを作成した場合、コンテナーがシャットダウンまたは異常終了した場合でも、コマンド・ラインでコンテナー・ログを参照することができます。
</p></context>
<steps>
<step importance="optional">
<cmd>ログ出力を生成するサンプル・コンテナーを実行します。
</cmd>
<info>このコマンドは、5 秒ごとに「Hello World」を繰り返すコンテナーを実行します。
<pre><ph conref="container_conref.dita#links/command_prefix_nocodeph"></ph> run --name example_log_container registry.<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/domainname"></keyword>/ibmliberty bash -c 'while sleep 5; do echo "Hello World"; done'</pre></info></step>
<step>
<cmd>コンテナーをリストして、その状況を確認します。</cmd>
<info>
<pre><ph conref="container_conref.dita#links/command_prefix_nocodeph"></ph> ps</pre>

<screen>CONTAINER ID        IMAGE                                               COMMAND                  CREATED             STATUS                   PORTS               NAMES
6fcf69aa-785        registry.<keyword conref="cloudoeconrefs.dita#cloudoeconrefs/domainname"></keyword>/ibmliberty:latest           "bash -c while sleep "   32 seconds ago      Running a second ago                         example_log_container</screen>
このコマンドは、コンテナー・グループの個々のインスタンスも表示します。
どのインスタンスが特定のグループに関連付けられているかを確認するには、
<codeph><ph conref="container_conref.dita#links/command_prefix_nocodeph"></ph> group instances <varname>GROUPNAME</varname></codeph> を実行します。
</info></step>
<step>
<cmd>コンテナーのログを確認します。</cmd>
<info> <codeph>-t</codeph> フラグを使用してタイム・スタンプを表示し、
<codeph>-f</codeph> フラグを使用してコンテナーの実行中のログ出力をフォローします。
<pre><ph conref="container_conref.dita#links/command_prefix_nocodeph"></ph> logs -t -f <varname>example_log_container</varname></pre>

<screen>+2016-12-08T19:49:31.307854194Z Hello World
+2016-12-08T19:49:36.308732957Z Hello World
+2016-12-08T19:49:41.309584275Z Hello World
+2016-12-08T19:49:46.310452464Z Hello World
+2016-12-08T19:49:51.311398846Z Hello World
+2016-12-08T19:49:56.312385701Z Hello World</screen></info></step>
<step>
<cmd>ログのフローを終了するには、<codeph>CTRL+c</codeph> を使用します。
</cmd>
<info>
<screen>+2016-12-08T19:51:06.325924148Z Hello World
+2016-12-08T19:51:11.326833396Z Hello World
+2016-12-08T19:51:16.327732363Z Hello World
^C
$ </screen></info></step>
<step>
<cmd>コンテナーを停止して削除し、リソースが消費されないようにします。
</cmd>
<info>
<pre><ph conref="container_conref.dita#links/command_prefix_nocodeph"></ph> stop <varname>example_log_container</varname></pre>

<pre><ph conref="container_conref.dita#links/command_prefix_nocodeph"></ph> rm <varname>example_log_container</varname></pre></info></step></steps>
<postreq>すべてのログ・フラグを確認するには、<xref href="https://docs.docker.com/engine/reference/commandline/logs/" format="html" scope="external">docker logs</xref> を参照してください。
追加のログを指定する方法を理解するためには、<xref href="container_ml_gettingstarted_tutorial.dita#container_ml_gettingstarted_tutorial" format="dita" scope="local"></xref>を行ってみてください。
</postreq></taskbody></task>
